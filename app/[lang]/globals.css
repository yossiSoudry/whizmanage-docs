@import url("https://fonts.googleapis.com/css2?family=Heebo:wght@200;300;400;700;800;900&display=swap");
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 5.9% 10%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 47.4% 11.2%;
    --foreground: 210 40% 96.1%;
    --card: 222.2 47.4% 11.2%;
    --card-foreground: 0 0% 98%;
    --popover: 222.2 47.4% 11.2%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 215.4 16.3% 46.9%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 222.2 47.4% 11.2%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 215.3 25% 26.7%;
    --input: 215.3 25% 26.7%;
    --ring: 215.3 25% 26.7%;
  }
}

@layer base {
  * {
    @apply border-border rtl:font-heebo;
  }

  body {
    @apply bg-background text-foreground;
  }
}

.typography {
  @apply prose prose-zinc prose-headings:scroll-m-20 prose-code:rounded-md prose-code:p-1 prose-code:font-code prose-code:leading-6 prose-code:before:content-none prose-code:after:content-none prose-pre:border prose-pre:bg-slate-100 prose-img:rounded-md prose-img:border;
  @apply w-[85vw] !min-w-full pt-2 text-sm prose-code:text-xs sm:mx-auto sm:w-full;
  @apply dark:prose-invert prose-code:text-slate-800 dark:prose-code:bg-slate-900 dark:prose-code:text-white dark:prose-pre:bg-slate-900;
}

.prose {
  margin: 0 !important;
}

.prose ul > li::marker {
  color: hsl(0, 0%, 29%);
}

.dark .prose ul > li::marker {
  color: hsl(0, 0%, 79%);
}

.prose :where([class~="not-prose"] ul > li)::marker,
.prose :where([class~="not-prose"] ul > li)::marker * {
  color: inherit;
}

.prose
  :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-inline-start: 0;
}

.prose :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  width: auto;
}

.prose table {
  @apply border-collapse border border-border !rounded-md;
}

.prose th {
  @apply dark:bg-slate-950/50;
}

.prose th,
.prose td {
  @apply border border-border;
  padding: 8px 10px;
}

.code-line {
  padding: 0.75px 12.5px;
}

pre {
  padding: 0 !important;
  width: inherit !important;
  overflow-x: auto;
}
pre > code {
  display: grid;
  max-width: inherit !important;
  padding: 14px 0 !important;
}

.contains-task-list {
  list-style-type: none;
  padding-inline-start: 0;
}

.task-list-item {
  display: flex;
  align-items: center;
}

.task-list-item input {
  margin-right: 0.5rem;
}

.line-number::before {
  display: inline-block;
  width: 1rem;
  margin-right: 22px;
  margin-left: -2px;
  color: rgb(110, 110, 110);
  content: attr(line);
  text-align: right;
}

.highlight {
  font-weight: bold;
  color: black;
}

.dark .highlight {
  font-weight: bold;
  color: white;
}

.highlight-line {
  @apply dark:bg-slate-800/90;
  @apply bg-slate-200/90;
}

.highlight-comp > code {
  background-color: transparent !important;
}

.attr-name {
  color: #414141;
}

.dark .attr-name {
  color: #cacaca;
}

.punctuation,
.comment {
  color: gray;
}

.attr-name,
.number,
.tag,
.property-access,
.keyword {
  color: hsla(335, 73%, 53%, 1);
}

.dark .attr-name,
.dark .tag,
.dark .keyword,
.dark .property-access,
.dark .number {
  color: hsla(335, 76%, 59%, 1);
}

.at.operator,
.builtin,
.function {
  color: hsla(210, 100%, 66%, 1);
}

.attr-value,
.string {
  color: hsla(131, 43%, 57%, 1);
}

.constant,
.annotation,
.boolean {
  color: hsl(0, 0%, 29%);
}

.dark .constant,
.dark .annotation,
.dark .boolean {
  color: hsl(0, 0%, 71%);
}

span.katex-display {
  display: flex;
}

span.katex-html {
  display: none;
}

.rehype-code-title {
  @apply px-2;
  @apply -mb-8;
  @apply w-full;
  @apply text-sm;
  @apply pt-1;
  @apply pb-5;
  @apply font-normal;
  @apply tracking-wider;
  @apply font-medium;
  font-family: var(--font-code) !important;
}

.CollapsibleContent {
  overflow: hidden;
}
.CollapsibleContent[data-state="open"] {
  animation: slideDown 300ms ease-out;
}

.CollapsibleContent[data-state="closed"] {
  animation: slideUp 300ms ease-out;
}

@keyframes slideDown {
  from {
    height: 0;
  }
  to {
    height: var(--radix-collapsible-content-height);
  }
}

@keyframes slideUp {
  from {
    height: var(--radix-collapsible-content-height);
  }
  to {
    height: 0;
  }
}
